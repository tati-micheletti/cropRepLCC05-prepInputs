library(SpaDES)
setPaths(modulePath = file.path("C:/Users/Tati/Documents/GitHub/repex/cropRepLCC05-prepInputs"))
getPaths() # shows where the 4 relevant paths are
workDirectory <- getwd()
paths <- list(
cachePath = file.path(workDirectory, "cache"),
modulePath = file.path(workDirectory, "modules"),
inputPath = file.path(workDirectory, "inputs"),
outputPath = file.path(workDirectory, "outputs")
)
setPaths(modulePath = paths$modulePath, inputPath = paths$inputPath, outputPath = paths$outputPath, cachePath = paths$cachePath)
setPaths(modulePath = paths$modulePath, inputPath = paths$inputPath, outputPath = paths$outputPath, cachePath = paths$cachePath)
parameters <- list()
modules <- list("prepInputsProblems")
objects <- list()
inputs <- list()
outputs <- list()
mySim <- simInit(times = times, params = parameters, modules = modules,
objects = objects)
times <- list(start = 0, end = 1)
parameters <- list()
modules <- list("prepInputsProblems")
objects <- list()
inputs <- list()
outputs <- list()
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
template1 <- prepInputs(url = "ftp://ftp.ccrs.nrcan.gc.ca/ad/NLCCLandCover/LandcoverCanada2005_250m/LandCoverOfCanada2005_V1_4.zip", destinationPath = dataPath(sim)) # OUTSIDE sim (temporary)
template1
plot(template1)
raster::plot(template1)
sim$template2 <- prepInputs(url = "ftp://ftp.ccrs.nrcan.gc.ca/ad/NLCCLandCover/LandcoverCanada2005_250m/LandCoverOfCanada2005_V1_4.zip", destinationPath = dataPath(sim)) # IN SIM
raster::plot(sim$template2)
sim$template2 <- prepInputs(url = "ftp://ftp.ccrs.nrcan.gc.ca/ad/NLCCLandCover/LandcoverCanada1985_2005_1KM/1985_12Classes.tif", destinationPath = dataPath(sim)) # IN SIM
sim$template2 <- prepInputs(url = "ftp://ftp.ccrs.nrcan.gc.ca/ad/NLCCLandCover/LandcoverCanada1985_2005_1KM/1985_12Classes.tif", targetFile = "1985_12Classes.tif", destinationPath = dataPath(sim)) # IN SIM
template1
sim$studyArea1 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize) %>%
postProcess(targetFilePath = dataPath(sim), destinationPath = dataPath(sim), rasterToMatch = template1) # Using outside-sim template
sim$studyArea1
sim$studyArea1 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize)
sim$studyArea1
sim$studyArea1 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize) %>%
postProcess(targetFilePath = dataPath(sim), destinationPath = dataPath(sim)) # Not using template: works
sim$studyArea1
sim$studyArea2 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize) %>%
postProcess(targetFilePath = dataPath(sim), destinationPath = dataPath(sim), rasterToMatch = template1) # Using outside-sim template
sim$studyArea2
sim$template2
sim$studyArea3 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize) %>%
postProcess(targetFilePath = dataPath(sim), destinationPath = dataPath(sim), rasterToMatch = template2) # Using in-sim template
sim$studyArea3
?postProcess
?postProcess.spatialObjects
sim$studyArea1 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize) %>%
postProcess(targetFilePath = dataPath(sim), destinationPath = dataPath(sim)) # Not using template: works
sim$studyArea1
sim$studyArea2 <- randomPolygon(x = sim$polyMatrix, hectares = sim$areaSize) %>%
postProcess(targetFilePath = dataPath(sim), destinationPath = dataPath(sim), rasterToMatch = template1) # rasterToMatch: doesn't work
sim$studyArea2
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
Plot(template)
plot(template)
raster::plot(template)
sim$map1 <- prepInputs(url = "https://storage.googleapis.com/earthenginepartners-hansen/GFC-2016-v1.4/Hansen_GFC-2016-v1.4_treecover2000_60N_120W.tif", targetFile = "Hansen_GFC-2016-v1.4_treecover2000_60N_120W.tif", destinationPath = dataPath(sim), studyArea = sim$studyArea1) # Works
sim$map1
sim$map1 <- prepInputs(url = paste0("https://storage.googleapis.com/earthenginepartners-hansen/",
"GFC-2016-v1.4/Hansen_GFC-2016-v1.4_treecover2000_60N_120W.tif"),
targetFile = "Hansen_GFC-2016-v1.4_treecover2000_60N_120W.tif",
destinationPath = dataPath(sim),
studyArea = sim$studyArea1) # Works, but has different projection as template Raster
sim$map2 <- raster::raster(file.path(dataPath(sim), "Hansen_GFC-2016-v1.4_treecover2000_60N_120W.tif"))
sim$map1 <- prepInputs(url = paste0("http://www.cec.org/sites/default/files/Atlas/Files/",
"Land_Cover_2010/Land_Cover_2010_TIFF.zip"),
destinationPath = dataPath(sim),
studyArea = sim$studyArea1) # doesn't work.
sim$map1
sim$map1 <- prepInputs(url = paste0("http://www.cec.org/sites/default/files/Atlas/Files/",
"Land_Cover_2010/Land_Cover_2010_TIFF.zip"),
destinationPath = dataPath(sim),
studyArea = sim$studyArea1) # doesn't work.
sim$map1
sim$map1 <- prepInputs(url = paste0("http://www.cec.org/sites/default/files/Atlas/Files/",
"Land_Cover_2010/Land_Cover_2010_TIFF.zip"),
targetFile = "NA_LandCover_2010_25haMMU.tif",
destinationPath = dataPath(sim),
studyArea = sim$studyArea1) # doesn't work.
sim$map1
plot(sim$map1)
raster::plot(sim$map1)
sim$map1
template
sim$map2 <- prepInputs(url = paste0("http://www.cec.org/sites/default/files/Atlas/Files/",
"Land_Cover_2010/Land_Cover_2010_TIFF.zip"),
destinationPath = dataPath(sim),
studyArea = sim$studyArea1,
rasterToMatch = template)
sim$map2 <- prepInputs(url = paste0("http://www.cec.org/sites/default/files/Atlas/Files/",
"Land_Cover_2010/Land_Cover_2010_TIFF.zip"),
targetFile = "NA_LandCover_2010_25haMMU.tif",
destinationPath = dataPath(sim),
studyArea = sim$studyArea1,
rasterToMatch = template)
sim$map2
sim$map2 <- prepInputs(url = paste0("http://www.cec.org/sites/default/files/Atlas/Files/",
"Land_Cover_2010/Land_Cover_2010_TIFF.zip"),
targetFile = "NA_LandCover_2010_25haMMU.tif",
destinationPath = dataPath(sim),
studyArea = sim$studyArea1,
rasterToMatch = template)
sim$map2
sim$map3 <- prepInputs(url = paste0("ftp://ftp.ccrs.nrcan.gc.ca/ad/NLCCLandCover/",
"LandcoverCanada2005_250m/LandCoverOfCanada2005_V1_4.zip"),
destinationPath = dataPath(sim),
studyArea = sim$studyArea1,
rasterToMatch = template)
sim$map3
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
library(SpaDES)
workDirectory <- getwd()
paths <- list(
cachePath = file.path(workDirectory, "cache"),
modulePath = file.path(workDirectory, "modules"),
inputPath = file.path(workDirectory, "inputs"),
outputPath = file.path(workDirectory, "outputs")
)
setPaths(modulePath = paths$modulePath, inputPath = paths$inputPath, outputPath = paths$outputPath, cachePath = paths$cachePath)
times <- list(start = 0, end = 1)
parameters <- list()
modules <- list("prepInputsProblems")
objects <- list()
inputs <- list()
outputs <- list()
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
objects <- list(sim$polyMatrix = matrix(c(-121.85, 53.04), ncol = 2))
objects <- list(sim$polyMatrix = matrix(c(-121.85, 53.04), ncol = 2))
objects <- list(sim$polyMatrix = matrix(c(-121.85, 53.04), ncol = 2))
objects <- list(polyMatrix = matrix(c(-121.85, 53.04), ncol = 2))
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySimOut@.envir$map1
mySimOut@.envir$studyArea1
plot(mySimOut@.envir$map1)
raster::plot(mySimOut@.envir$map1)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySimOut$$map4
mySimOut$map4
mySimOut$studyArea
mySimOut$studyArea1
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySimOut@.envir$map5
mySimOut@.envir$map4
mySimOut@.envir$map6
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
library(SpaDES)
workDirectory <- getwd()
paths <- list(
cachePath = file.path(workDirectory, "cache"),
modulePath = file.path(workDirectory, "modules"),
inputPath = file.path(workDirectory, "inputs"),
outputPath = file.path(workDirectory, "outputs")
)
setPaths(modulePath = paths$modulePath, inputPath = paths$inputPath, outputPath = paths$outputPath, cachePath = paths$cachePath)
times <- list(start = 0, end = 1)
parameters <- list()
modules <- list("prepInputsProblems")
objects <- list() #polyMatrix = matrix(c(-121.85, 53.04), ncol = 2))
inputs <- list()
outputs <- list()
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySim <- simInit(times = times, params = parameters, modules = modules,objects = objects)
mySimOut <- spades(mySim)
mySimOut$map7
